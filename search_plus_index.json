{"./":{"url":"./","title":"SOFA.org Overview","keywords":"","body":" SOFA.org Overview What is SOFA.org? SOFA.org is a decentralized, non-profit organization focused on advancing the DeFi ecosystem. Our modus operandi is to promote the highest DeFi standards, support high-quality projects, and promote adoption of blockchain technologies across mainstream finance. SOFA.org will operate as a DAO concentrating on three key areas in DeFi 📚 Education & Tech Advancement: Innovate and share knowledge across participants. 🔬 Research & Innovation: Develop new DeFi solutions with tangible value-add. 🛡 Industry Standards: Establish best practices for protocol safety and capital efficiency. 🗳 $SOFA Governance Token $SOFA is the governance token that allows holders to participate in the decision-making process for the SOFA.org ecosystem. Holders of $SOFA have voting rights on key proposals, helping to shape the future of our burgeoning ecosystem. This token encourages community ownerhsip and ensures that the community has a direct say in the platform’s development and management. SOFA.org has amassed an all-star cast of founding members and project partners to jump-start our protocol and TVL growth right from the get-go. DAO Members and Supporting Members as of Early May 2024 What is SOFA.org building? SOFA.org will build and support protocol projects that will bolster DeFi's growth as an integral infrastructure of conventional finance. The inaugural project will focus on providing a transparent, scalable, and decentralized clearing solution handling crypto structured products on-chain. Users will be able to purchase a variety of structured products from a limitless number of market makers on our open dAPP to earn attractive yields, with executed transactions automatically settled via our standardized vaults to remove all counterparty risks. Furthermore, platform users are directly rewarded through the native utility token $RCH, a fixed supply deflationary token which can only be earned via protocol usage. Finally, to ensure incentive-alignment, all protocol earnings will be recycled to burn $RCH tokens daily, decreasing total float and accruing all profits to our user-token holders over the long-run. 🤑 $RCH Utility Token $RCH is the core utility token within the SOFA ecosystem. It is designed to reward users for transacting within the ecosystem and participating in its growth. $RCH has a total supply of 37 million tokens, with 25 million (~67%) pre-minted and locked in a Uniswap liquidity pool. The remaining 12mm (33%) are earmarked to be airdropped to protocol users and supporters. The long-term deflationary design ensures that the token value appreciates hand-in-hand with rising transaction volumes. 🚀 EARN WITH US $SOFA tokens can be earned through contributions to the community and participation in governance activities. Users can also burn $RCH to get $SOFA. Remember, users earn $RCH through daily airdrops based on their transaction volume, allowing active users to earn substantial airdrops, on top of the potential yield they receive from purchasing structured products.** 🗣 Broker Referral Program (dApp) We recognize that there is strength in numbers, so we have designed a broker referral reward mechanism aimed at enabling the accessibility and infrastructure of the SOFA ecosystem. Participating brokers who build and enable end-user access to the underlying SOFA protocols, such as through the development of supporting dAPPs, will be entitled to receive 5% of the end user's airdrop rewards, paid directly from the protocol. Come join the SOFA.org Community today! Twitter | Discord | Telegram | Medium | Contact us "},"innovating/":{"url":"innovating/","title":"Innovating the Next Wave of DeFi","keywords":"","body":" Innovating the Next Wave of DeFi Counterparty Defaults Served a Stark Reminder to the Importance of Decentralisation 2022 provided a harsh reality check for crypto, with the demise of Genesis, Celsius, 3AC, and FTX shocking the very core of our ecosystem, and reminded us of the importance of decentralisation that many of us had forgotten in our pursuit of profits. Traditional finance went through a similar reckoning with the demise of Lehman, where a chain of (over-indebted) counterparty failures nearly brought down the global financial system. As a result, the post-GFC era legislated the use of centralized clearing houses and tri-party clearing arrangements, effectively segregating and concentrating asset custody risk into well-funded (and highly regulated) 3rd party entities. Regulators had deemed that it was safer and more efficient to manage collateral risks within focused points of contact, as well as preventing bad actor intermediaries from playing 'fast-and-loose' with balance sheet management. Fast forward to today, imagine if the world had a widely available technology solution that provided immutable data records, traceable transactions, definable parameters, operational transparency, and exceptional network security; surely a technology like that would provide the ideal solution for a global settlement depository, wouldn't it? Rekindling the 'Trustless' Spirit as the Core Value of Blockchain Decentralization. Transparency. Immutability. Exensibility. Authenticity. These are some of the common words most often uttered as the main advantages provided by blockchain. However, we feel that 'Trustless' offers the best personification of crypto's core values, as blockchain has enabled complete strangers to execute valid transactions without the reliance on arbitrary middleman or gated privileged groups. Furthermore, smart contract immutability allows one to place their absolute faith in code instead of the goodwill of your counterparty. As such, the foundation of trustlessness is built on the uncompromisable pillars of 1) contract immutability and 2) on-chain asset settlement. These core principles will be our driving force in developing a protocol that can truly be free from the confines of centralization. However, let's be clear that the decentralization spirit should be about promoting user access and participation, rather than absolving responsibility in some extreme form of financial anarchy. While blockchain executions could be anonymous, there is still usually a social human being at the other end of your transaction that we should treat with respect. The development of the collective SOFA protocols is our attempt to promote the trustless decentralisation spirit, but it's equally important for us to establish a set of 'best practices' guidelines to uphold professional accountability, even if they are self-imposed or self-regulated. Every part of our protocol design, including contract transparency, vault classification, and fair-launch tokenomics demonstrate our resolve and commitment to building a more responsible DeFi. Through leading by example, we hope to show the world that there is a better way forward, with trustless decentralization being a key cornerstone of that future. Risk Tokenization At their core, financial instruments are ultimately nothing more than monetary contracts against a counterparty on some claims of payments and ownership. They are governed by various man-made (& centralised) layers of regulation, and legally memorialized by physical and electronic paperwork. Unsurprisingly, we can substitute a lot of the preceding words with \"digital\" and \"blockchain ledger\" without losing the essence of their meanings. Crypto has made tremendous progress in the area of on-chain safety, 'code is law' smart contract frameworks, transferrable digital currencies, and tokenization of RWAs. We are taking the last part one step further with our innovative product vaults, where we are recording not just the notional amount, but also transcribing other vital instrument parameters on-chain, so that they can be authentically replicated and referenced upon in a process we call Risk Tokenization. The resulting output will be contained in something called 'Position Tokens', which can be thought of as ownership claims on chain-locked assets, but can be freely transferred between users like a standard ERC-20 tokens. A Sustainable Tokenomics Model with Usage Driven Rewards Look, money makes the world go-around, and the maximization of self-interest as a stable equilibrium outcome is a core driving force behind DeFi. However, in the past cycle, we have seen a number of (very) high profile failures of once promising projects due to poorly constructed tokenomics. Whether it's due to exit-liquidity dumps (by insiders & VCs), gimmicky inflationary experiments, price-reflexive demand models, or an over-focus on short-term gains, there is still a lot of work to do to promote a more sustainable monetary model. In response, SOFA.org will be deploying a 100% fair-launch tokenomics model, with a fixed-supply deflationary utility token that can only be earned via protocol usage. Furthermore, all protocol earnings will be used for daily token burn operations, ensuring that all profits are directly recycled back into the pockets of our core users and hodlers. Over the long-run, the token price shall be a fundamental representation of how much (settlement) value our protocols have contributed to the ecosystem. 'Trade to Earn', anyone? Decentralized Clearing as a New Settlement Foundation With the wisdom gained from the past cycle, we are directly addressing some of the structural shortcomings in DeFi while iterating on its key innovations. Specifically, the creation of SOFA.org's decentralized clearing vaults is our ambitious attempt to establish standards of how financial assets can be atomically settled on-chain, while simultaneously catalyzing DeFi capital liquidity through transferrable Position Tokens. By recording relevant instrument details directly on the smart contract, not only can we settle these assets on-chain, but the protocol can also mint matching Position Tokens as a definitive digital proof of claim. Furthermore, these Positions Token can be pledged to other DeFi protocols and even CeFi platforms as secure collateral, greatly enhancing capital velocity across the entire ecosystem. Finally, by having our thoroughly designed DeFi vaults as a secure, transparent, and 'neutral' settlement option on the blockchain, we have eliminated asset custody concerns across crypto intermediaries, offering users complete ease of mind to focus on return ON capital rather than return OF capital. "},"protocols/":{"url":"protocols/","title":"🌏 Welcome To the SOFA Protocols 🌏","keywords":"","body":"🌏 Welcome To the SOFA Protocols 🌏 🏗️ What’s A Structured Product? In a nutshell, a Structured Product is a hybrid derivative that combines the features of multiple financial products into one. Think of it as a financial smoothie. It blends different financial goodies (like bonds and options) into one tasty package. It offers protection and potential profits based on market conditions. 🤔 Why Should You Care? ▶️ Custom Payoffs: Get returns tailored to your preferences. ▶️ Simple Management: One product, no hassle. ▶️ Flexibility: Customize your purchases based on your risk tolerance. ▶️ High Yields: Crypto’s volatility means potentially higher returns. ⛓️ Going On-Chain In the traditional finance world, getting access to structured products is like navigating a maze filled with gatekeepers who care more about making money off you than helping you grow your savings. This process is opaque, expensive, and exclusive to the wealthy. Transparency: No more middlemen; clear pricing for all. Fairness: Accessible to everyone, not just the big players. Ethereum and Beyond: Launching on Ethereum and other blockchains. The SOFA protocols will be launched on Ethereum and other L1 EVM blockchains to start. 🔁 How a Trade Works in the SOFA Protocols** 1️⃣ Market Prices: Supporting market makers stream live prices for different products. 2️⃣ User Buys: You pick and buy a product at the shown price. 3️⃣ Lock Assets: Both your assets and the market maker's assets are locked in the Vault. 4️⃣ Tokens Minted: You and the market maker get tokens that represent your positions. 5️⃣ Earnings: For most products, your collateral earns interest. 6️⃣ Claim Payout: After the product expires, you can claim your payout. 🛡️ Position Token Standards and Product Vaults ERC-1155 Tokens The SOFA protocols will use the ERC-1155 standard to manage multiple token types within one contract. These tokens can be merged or split, and transferred easily, like ERC-20 tokens. They store key details like expiry and prices. Product Vaults SOFA’s product vaults also use ERC-1155 to support tokens with the same parameters, offering flexibility and efficiency. They can support various product types and collateral, with a distinction on principal risk tolerance.. 🪙 Position Tokens Unlocking Assets Position Tokens make locked assets movable, boosting liquidity in DeFi. Secondary Trading You can trade Position Tokens like regular tokens. Owners of the position tokens will always have final ownership of the assets in the vault. This offers you the flexibility to pledge your locked funds for new opportunities. 🏦 A New Standard for Vault Design The SOFA protocols offer a new way to handle crypto by making transactions clear and safe. It lets you earn based on benefits without worrying about asset safety. All details are recorded transparently on the blockchain, supporting various products. Tokenized positions improve capital efficiency and can be used across DeFi and centralized platforms. Using ERC-1155 tokens saves on costs, and the system is designed to be sustainable and user-friendly. As our inaugural proof-of-concept, we will initially focus on three popular product structures called Rangebound, Bull Trend, and Bear Trend. All of these products are available in either 'Earn' or 'Surge' formats. Moreover, additional product types will be continually added based on user demand and ecosystem feedback. Rangebound Product Overview A Rangebound product helps you make money if an asset, like Bitcoin, stays between two set prices during the maturity period. If the price stays within this range, you get an extra profit. You can customize the range: a narrow range means more profit but more risk, while a wider range means less profit but higher chances of winning. If the asset goes outside the range, you still get a guaranteed minimum yield. Trend Product Overview (Bullish/Bearish) A Trend product helps you make money if an asset, like Bitcoin, moves smoothly within a set price range. You set a lower and upper price limit with a certain direction (bullish / bearish). If the asset stays within this range at the end, you get a profit based on where the price falls. This product works for both bullish (price going up) and bearish (price going down) scenarios. It also offers some base protection if the price doesn't move as expected. ⚖️ Risk Preference Earn If you don't like risk, choose this protocol. Take comfort with maximum downside protection while your deposit earns a steady interest, while enjoying a bonus profit if the market moves in your favor. What's there not to like? Surge If you like taking risks, this protocol offers higher rewards but with the chance of losing your entire deposit. If the market stays within your chosen range, you earn a lot. If not, you lose your purchase amount. Go big or go home? "},"user-guide/":{"url":"user-guide/","title":"User Guide","keywords":"","body":"User Guide Prepare Your Wallet If you have not installed the Web3 wallet, please use a browser that supports plug-ins such as Chrome or Firefox to install wallets that we support. Once your wallet is ready, navigate directly to the SOFA APP and connect your wallet. SOFA is on both Ethereum and Arbitrum. Start a trade on Earn and Surge Protocols 📢 1. Define Your Risk Preferences ✅ Earn Protocol: Tailored for risk-averse depositors looking for the utmost downside protection of their capital. Surge Protocol: Designed for those seeking high returns, the Surge Protocol is ideal if you're willing to embrace higher risks for potentially greater rewards. 2. Profit From Your Market Insight ✅ Choose from three structured products under each protocol, each suited to different market conditions: 1) Rangebound: The product is ideal for boring, sideways markets! When volatility is low and prices are stable, users have a higher chance of earning attractive payoffs. 2) Bull Trend: The product is ideal for users anticipating a consistent upward market trajectory. If you're bullish about the market’s prospects, the Bull Trend is tailored for you! 3) Bear Trend: The product is perfectly suited for users who anticipate a consistent downward market trajectory. If you're bearish about the market's prospects, the Bear Trend is specifically designed to match your outlook! Now, select and trade the product that matches your risk appetites and market view with SOFA! "},"user-guide/earn.html":{"url":"user-guide/earn.html","title":"Earn","keywords":"","body":"Earn Rangebound Step 1: Selecting Your Product → Navigate to the Protocol tab and click on Earn. → Choose the Rangebound structured product. → Select the underlying asset you prefer—BTC or ETH. → Select one of the Top Pick Trades listed for your chosen asset. Step 2: Reviewing Trade Details → A popup will display all relevant trade information, including Settlement Date, Lower and Upper Barriers, Base Yield, Base+ RCH, Potential Yield, and the potential outcomes under various scenarios. → Enter your desired amount in USDT in the Deposit Amount box → click Deposit → your wallet will pop up a confirmation window. If you wish to customize any details, proceed to Step 3. Step 3: Customizing Your Trade → Click on the Customize icon either from the Earn homepage or from the product details page mentioned in Step 2 → On the Customize page, you can modify your trade settings. Select your desired parameters: Base Yield Expiry Date (i.e., Settlement Date) Lower Barrier Price (B1) and Upper Barrier Price (B2) Deposit Amount and click Request For Quote. → After setting the parameters, click Deposit to proceed. Step 4: Confirming Your Trade When prompted, engage with the following windows for trade confirmation: Signature Request: A signature request window will appear first. Click Sign to authorize. Trade Execution: After signing, a confirmation window will appear. Click Confirm to finalize the trade. ✅Ensure both actions are completed to successfully carry out your trade. Step 5: Trade Execution → Congratulations! Your transaction has been successfully submitted on-chain. ✅ Step 6: Monitoring Your Position → Access the Position tab to view your trade details post trade-execution. Step 7: Claiming Your Payouts → On settlement (expiry) date, go to the Position tab, open your trade ticket, and click Claim to receive your payouts. Note: For Earn products (secured), all invested amounts will be staked in the Aave protocol to generate passive returns. Moreover, a portion of the Aave returns will be retained as Base Yield, and the remaining part will be deployed to option strategies to generate potential Upside returns. Bull Trend Step 1: Selecting Your Product → Navigate to the Protocol tab and click on Earn. → Choose the Bull Trend structured product. → Select the underlying asset you prefer—BTC or ETH. → Select one of the Top Pick Trades listed for your chosen asset. Step 2: Reviewing Trade Details → A popup will display all relevant trade information, including Settlement Date, Lower and Upper Strikes, Base Yield, Base+ RCH, Potential Yield, and the potential outcomes under various scenarios. → Enter your desired amount in USDT in the Deposit Amount box → click Deposit → your wallet will pop up a confirmation window. If you wish to customize any details, proceed to Step 3. Step 3: Customizing Your Trade → Click on the Customize icon either from the Earn homepage or from the product details page mentioned in Step 2 → On the Customize page, you can modify your trade settings. Select your desired parameters: Base Yield Expire Date (i.e., Settlement Date) Lower Strike Price (K1) and Upper Strike Price (K2) Deposit Amount and click Request For Quote. → After setting the parameters, click Deposit to proceed Step 4: Confirming Your Trade When prompted, engage with the following windows for trade confirmation: Signature Request: A signature request window will appear first. Click Sign to authorize. Trade Execution: After signing, a confirmation window will appear. Click Confirm to finalize the trade. ✅Ensure both actions are completed to successfully carry out your trade. Step 5: Trade Execution → Congratulations! Your transaction has been successfully submitted on-chain. ✅ Step 6: Monitoring Your Position → Access the Position tab to view your trade details post trade-execution. Step 7: Claiming Your Payouts → On settlement (expiry) date, go to the Position tab, open your trade ticket, and click Claim to receive your payouts. Note: For Earn products (secured), all invested amounts will be staked in the Aave protocol to generate passive returns. Moreover, a portion of the Aave returns will be retained as Base Yield, and the remaining part will be deployed to option strategies to generate potential Upside returns. Bear Trend Follows the same steps as outlined for the Bull Trend product "},"user-guide/surge.html":{"url":"user-guide/surge.html","title":"Surge","keywords":"","body":"Surge Rangebound Step 1: Selecting Your Product → Navigate to the Protocol tab and click on Surge. → Choose the Rangebound structured product. → Select the underlying asset you prefer—BTC or ETH. → Select one of the Top Pick Trades listed for your chosen asset. Step 2: Setting Trade Details → Quick Picks are displayed at the top for fast selection. → Alternatively, customize your trade by setting the Price Range, Expiry Date, and Number of Tickets. Each ticket is valued at 20 USDT. → Add additional trades for different products by clicking the + button. → Review your selections and click Purchase All Tickets to proceed. Step 3: Confirming Your Trade When prompted, engage with the following windows for trade confirmation: Signature Request: A signature request window will appear first. Click Sign to authorize. Trade Execution: After signing, a confirmation window will appear. Click Confirm to finalize the trade. ✅Ensure both actions are completed to successfully carry out your trade. Step 4: Trade Execution → Congratulations! Your transaction has been successfully submitted on-chain. ✅ Step 5: Monitoring Your Position →Access the Position tab to view your trade details post trade-execution. Step 6: Claiming Your Payouts → On settlement (expiry) date, go to the Position tab, open your trade ticket, and click Claim to receive your payouts. Bull Trend & Bear Trend Follows the same steps as outlined for the Rangebound product. "},"user-guide/claim.html":{"url":"user-guide/claim.html","title":"Claiming Your $RCH Rewards! 🎁","keywords":"","body":"Claiming your $RCH Rewards! 🎁 Click the Claim RCH button located at the upper right corner of the page. Then, press the Claim button to receive your $RCH token reward. Note: The system captures daily snapshots. $RCH tokens are available for claim every day at UTC 08:00 following the execution of your trade. "},"technical-design/":{"url":"technical-design/","title":"Technical Design","keywords":"","body":"Product Scope The SOFA protocol will initially be focused on settling and tokenizing crypto structured products as our proof-of-concept. We are taking the 'road less travelled' to attack the most complex products first, where a successful deployment will see rapid expansion into all other crypto asset classes. The SOFA protocol will be launched on Ethereum and other L1 EVM blockchains to start. Protocol Workflow A high-level run-down of a typical trade execution via SOFA is as follows: Participating institutional market makers continuously stream executable prices on structured products to the protocol's dApp User selects and executes a particular structured product purchase based on the price shown User's committed assets are sent and locked in the product's DeFi vault The market maker's maximum premium exposure is also sent and locked in the vault Note: the transaction will not execute if either side fails to post their required assets at this point Corresponding Position Tokens claims (referencing asset details) will be minted to both the user and market maker, freely transferrable like any conventional ERC-20 token to any other wallet destination For 'Earn' structures only, the collateral in the vault would be staked into mature and safe yield earn protocols like Compound, AAVE and etc. to earn a base level of interest for users Extra careful scrutiny will be placed on this step, with eligible destinations voted on by the Governance Token holders Finally, upon product expiry, the relevant payout will be released and claimable in the vault by both the user and the market maker Should the respective Position Tokens be transferred to a new wallet, the owner of the address will instead be able to claim the asset at anytime post-expiry Token Standards (ERC-1155) The SOFA protocol tokenizes users' chain-locked positions via the ERC-1155 multi-token standard, recording vital position details such as [Expiry], [Anchor Prices], [Maker/Taker Toggle], and other fields as relevant to the instrument in question. Compared to conventional single-asset token standards, ERC-1155 allows the creation and management of multiple types of tokens within a single contract, with support for each type of token having different properties. Positions with the same parameters can still be merged or split, while enabling transfers as conveniently as standard ERC-20 tokens. This innovation strikes a balance between wide asset compatibility, high flexibility, and gas efficiency. Position Tokens with the same Strike Price and Expiry Time are fungible like any standard token, and can be batch settled in a single operation to allow significant gas savings. "},"technical-design/vault-classification.html":{"url":"technical-design/vault-classification.html","title":"Vault Classification","keywords":"","body":"Vault Classification The Vault contract uses the ERC-1155 standard to support fungibility of Position Tokens with the same strike price and expiry time. Tokens with different strike prices or the expiration time will have different Token IDs (ie. like a NFT) while still contained under the same Vault contract. The SOFA protocol is designed with the flexibility to support any structured product type and collateral denomination, though a distinction will be made on whether the underlying product contains a 'principal protection' feature or not. As such, our Vault designs are split into 2 major, self-explanatory product categories called 'Earn' and 'Surge'. Example Vault Taxonomy at SOFA Launch Available Products at Launch As our inaugural proof-of-concept, we will initially focus on three popular product structures called 'Rangebound' and 'Trend'. Furthermore, all of these products are available in either Earn or Surge protocols. Moreover, additional product types will be continually added based on user demand and ecosystem feedback. Rangebond Products Product Overview Rangebound products are a type of structured product based on price boundaries. Depositors can profit if the underlying asset does not touch the preset barriers during the maturity period. These products are suitable for users who expect the market to stay in a sideways consolidation phase with subdued volatility. Referring to the payoff diagram below, a user believes that BTC will be stuck between a range as defined by the lower and upper barriers, but does not want to incur much downside even if the view proves to be wrong. The Rangebound product will guarantee the user a minimum base yield of (A) even if the price of Range breaks out from either side, but the user will be entitled to an extra profit return equivalent to (A+B) should prices stay contained within the barriers. For customization options, the user is free to adjust the width of the price range, which would incur a different profile of base and upside profits depending on the levels chosen. Naturally, specifying a tighter price range represents a more aggressive bet on low volatility, which would lead to higher upside returns. Conversely, a wider price range would lower excess profits in return a higher probability of winning. Finally, for ease of management, the product can specified to be automatically 're-rolled' upon maturity as a continuation bet at a later protocol upgrade . (The 're-roll' function will be rolled out in the next phase of the upgrade). Trend Products Product Overview The Trend product is suitable for depositors who expect that the market will soon undergo a smooth and steady trend, but still desires some downside protection. By defining both a lower and upper price barrier, users will start accruing income gains as soon as the underlying instrument crosses the initial price threshold, with increasing payouts until we hit a maximum at the 2nd boundary. Moreover, unlike the Rangebound product, the Trend product only observes at the time of settlement whether the price of the underlying asset falls within the set range to determine the final profit (ie. European option). This product is available via both Bullish and Bearish expressions. As an example, if a user is bullish on BTC and predicts that in the next seven days, the price of BTC will remain above $68,500 but will not exceed $71,500, they can choose to buy a Bull Trend product, setting $68,500 as the lower limit and $71,500 as the upper limit of the profit range. Referring to the diagram below, at the time of settlement, the user will be eligible for a payout between base profit of (A) to and upper limit of (A+B), depending on what the price of BTC is at the time. Applicable Scenarios The product might be suitable for depositors who believe that an asset will see a strong reaction to a specific economic event, but is also concerned about the risk of a price decline should they be wrong in their market prognosis. For example, the user might desire to speculate on BTC prices on the next FOMC decision, the having event, or the next ETF approval announcement. This strategy is appropriate for users holding a strong market conviction into these important but risky events, and wants to remain disciplined in managing downside losses should his/her view turn out to be wrong. Shark Fin (For Later) Product Overview Compared to Rangebound and Trend products, the 'Shark Fin' product is relatively more well-known in TradFi markets thanks to its memorable moniker. Its design and payoff are similar to Trend (ie. European option), with the main exception being that the depositor is speculating much more aggressively on prices being within a particular range. Said in another way, the Shark Fin product adopts a more conservative view on market volatility by sacrificing more upside on a large market move, in return for more aggressive profits within the lower price boundaries. As example, let's say an user is bullish on BTC, but holds a high conviction that it will not breach a certain upper bound at some strong technical resistance level. In such a scenario, the user can choose to buy a Bullish Shark Fin product with a payoff profile as per the diagram below. At product settlement, the user will receive a return ranging from (A) to (A+B) depending on where spot BTC is; however, unlike in Trend products, note that the return drops to (A+C) upon a breach of the upper price barrier, offering a trade-off in exchange for more aggressive profits in the preceding range. "},"technical-design/risk-prefer.html":{"url":"technical-design/risk-prefer.html","title":"Defining Your Risk Preference","keywords":"","body":"Defining Your Risk Preference How much downside risk do you wish to take? Earn Protocol The 'Earn' protocol category is designed for risk-averse depositors looking for the utmost downside protection of their capital. Earn vaults will stake users' deposited capital in safe-yielding protocols (eg. AAVE) to generate a base level of interest, and utilize a portion of that guaranteed income to fund option premium with market makers for upside potential. The end result will maximize downside protection, while still maintaining some upside potential should the market move favourably in the user's direction. With that being said, please note that a critical design component requires the passive yields offered by the eligible staking protocols to be meaningfully above the product's worst-case payout, in order to properly fund the option premium to generate the upside return. As such, should the user be holding ETH instead of USDT, he/she will need to convert the ETH into stETH in a liquid staking protocol such as Lido, before locking the stETH into the protocol vaults to benefit from the extra yield accretion. Surge Protocol For users with a greater risk-reward tolerance, the protocol also offers higher-return structures with an upfront capital 'ante'. Surge protocols are solely targeted at aggressive users who are desirious of substantially high returns in exchange for capital losses. With these Surge-based products, the protocol vault will lock in both the user's principal as well as the market makers' premium at trade inception, analogous to a 'poker-ante' of sorts**. The locked capital positions will not be restaked to any other protocols, and it serves as the committed-ante against the final payoff. Let's use the Surge-Rangebound product as an example. Should the price of the underlying asset remain strictly within the barriers by final maturity, the user will receive an exponentially higher return than he would have under the Earn version. However, should the opposite happen, the structure will be early-terminated, with the locked principal being transferred to the market maker as the 'winner' of this strategy. Once again, these products are intended for users holding a very strong market conviction, and would like to put that confidence to test in hopes of earning a very high rate of return in exchange for principal losses. "},"technical-design/oracle.html":{"url":"technical-design/oracle.html","title":"Oracle Construction","keywords":"","body":"Oracle Construction In the world of cryptocurrencies and DeFi, obtaining off-chain data in a timely and accurate manner is crucial. As smart contracts cannot directly access external systems or data sources, oracles serve to bridge this gap by bringing outside information onto the blockchain. The trustworthy data service must be provided to ensure full settlement transparency and traceability in settlement, while minimizing possible disputes. The ChainLink oracle service, known for its high degree of decentralization, reliability, and adaptability, has been chosen as SOFA's primary means of accessing off-chain data. Furthermore, the use of ChainLink price feeds has the additional benefit of protecting the protocol against 'flash loan attacks', while the source of data feeds will be from reputable trading platforms such as Coinbase to ensure sanctity of data. Spot Price / Price at Expiry Obtaining the current price of an underlying asset on-chain through an oracle is typically done in one of two ways: calling contracts from DEXs like Uniswap to get the Price or TWAP Price of the underlying asset obtaining the asset price through data feeds provided by an oracle service like ChainLink Considering the need for the Settlement Price to be as close as possible to CeFi exchange prices (for ease of hedging by users or market makers) and for security reasons (to avoid manipulation and attacks), we have chosen ChainLink's Data Feeds as the oracle source for our Price at Expiry. With ChainLink's decentralized data sources that aggregate pricing information from different exchanges, we ensure that our smart contract executions are based on up-to-date, reliable, and fairest sets of pricing data publicly available. Calculated Price Derived from Historical Closes For products like Rangebound, it is necessary to know the highest and lowest prices of the underlying token from mint inception to expiry in order to calculate the final payout. Common on-chain typically cannot provide this data, given that on-chain oracles do not provide continuous time-series data. Instead of deploying our own oracle contracts as a (common) centralization compromise, we have found a solution in ChainLink's Functions product. Thanks to the latest innovations, we are able to call off-chain APIs in a decentralized manner, and publish the obtained data on-chain through decentralized nodes like a typical data feed. Automation Regular Update Service SOFA utilizes ChainLink Automation to guarantee that prices are automatically updated and pushed to the blockchain on a regular basis. ChainLink Automation offers a decentralized network where smart contracts can schedule and automatically execute complex tasks, including interval data updates, trigger events, and even critical contract adjustments. This ensures that on-chain prices remain constantly up to date, and offers data confidence to SOFA's network of connected dApps. Decentralization and Traceability Staying true to our core DeFi spirit, SOFA's price data retrieval process will always be fully decentralized, offering full audit traceability at the contract level. Our advocacy for transparent processing ensures that every step within the system is openly verifiable by users, with pricing data details such as provider source and aggregation logic fully observable at all times. Continuous Innovation in Oracle Services While ChainLink remains a gold standard for DeFi data reliability, SOFA is continuously exploring and staying informed of the latest innovations in oracle services. We are cognizant of over-reliance on limited provider sources and will strive to diversify our protocol inputs as much as technologically possible. In the long-run, SOFA strives to offer users a robust, transparent, decentralized, and sustainable data acquisition system that can safeguard user interests while ensuring operational longevity. "},"technical-design/settlement.html":{"url":"technical-design/settlement.html","title":"On-Chain Settlement Considerations","keywords":"","body":"On-Chain Settlement Considerations Settlement Logistics Job-scheduling challenges in the world of DeFi With trivial for conventional systems, time-scheduled data retrievals are challenging for blockchain, as smart contracts do not have a native 'Cron-like' job scheduler. How can we design an automated mechanism to ensure that prices are scheduled and updated on time in crypto? Crypto 'algo-stables' such as Basis Cash or ESD once swept through the DeFi sector, deploying an 'epoch' interval approach which required a manual trigger to advance operations at the end of each epoch and establish a new settlement price. Reward mechanisms were built-in to smart contract code to compel volunteers to 'trigger the advance' and keep the protocols in smooth operation. Similarly, a popular project called Keep3r founded by Andre Cronje (Yearn Finance, Fantom) created a virtual job board where one would post advance requests and specified job awards for this very specific purpose. Neither solution was far from perfect as they ultimately relied on human intervention (motivated self-interests), not to mention uncertainties over the actual final execution time, given the manual efforts required. This can lead to uncomfortable situations where the settlement fixing isn't updated until well after the expiry, leading to a less than satisfactory user-experience. Could we create and rely on off-chain solutions that call for a periodic triggering of price updates? While possible, we remain disinterested in centralized 'shortcuts' where the protocol could be critically impaired by risks such as a server failure. As covered in our oracle section, SOFA utilizes ChainLink's Automation service as our settlement pricing source. Their service enables conditional execution of smart contract functions through a reliable and decentralized automation platform with a proven network of external node operations, currently securing over billions in TVL. Finally, with the final settlement price in place, users and market makers can call the contract to burn their Position Token at anytime and receive their due payment, which calculations seamlessly handled by the smart contract with reliable data feeds from SOFA's decentralized oracles. Payoff Calculations The contract for calculating product payoffs is completely standardized, and is Vault-independent and collateral agnostic. Instead, calculation contracts are defined by the underlying type of structured product to calculate the model payouts. Some payoff examples are listed below: Rangebound Payoffmaker={X,HighSettlePrice≥HighStrikePrice∨LowSettlePrice≤LowStrikePrice0,HighSettlePriceHisghStrikePrice∧LowSettlePrice>LowStrikePricePayoff{maker}=\\begin{cases}X, HighSettlePrice\\geq HighStrikePrice\\vee LowSettlePrice\\leq LowStrikePrice\\\\ 0, HighSettlePriceLowStrikePrice\\end{cases}Payoffmaker={​X,HighSettlePrice≥HighStrikePrice∨LowSettlePrice≤LowStrikePrice​0,HighSettlePriceHisghStrikePrice∧LowSettlePrice>LowStrikePrice​​ Payoffuser=X−PayoffmakerPayoff {user}=X - Payoff {maker}Payoffuser=X−Payoffmaker Smart Trend Bull Trend Payoffmaker={0,SettlePrice≥HighStrikePriceX×HighStrikePrice−SettlePriceHighStrikePrice−LowStrikePrice,LowStrikePriceSettlePriceHighStrikePriceX,SettlePrice≤LowStrikePricePayoff{maker}=\\begin{cases}0, SettlePrice\\geq HighStrikePrice\\\\ X\\times\\frac{HighStrikePrice-SettlePrice}{HighStrikePrice-LowStrikePrice},LowStrikePricePayoffmaker=​⎩​⎪​⎨​⎪​⎧​​​0,SettlePrice≥HighStrikePrice​X×​HighStrikePrice−LowStrikePrice​​HighStrikePrice−SettlePrice​​,LowStrikePriceSettlePriceHighStrikePrice​X,SettlePrice≤LowStrikePrice​​ Payoffuser=X−PayoffmakerPayoff {user}=X - Payoff {maker}Payoffuser=X−Payoffmaker Bear Trend Payoffmaker={X,SettlePrice≥HighStrikePriceX×SettlePrice−LowStrikePriceHighStrikePrice−LowStrikePrice,LowStrikePriceSettlePriceHighStrikePrice0,SettlePrice≤LowStrikePricePayoff{maker}=\\begin{cases}X, SettlePrice\\geq HighStrikePrice\\\\ X\\times\\frac{SettlePrice-LowStrikePrice}{HighStrikePrice-LowStrikePrice},LowStrikePricePayoffmaker=​⎩​⎪​⎨​⎪​⎧​​​X,SettlePrice≥HighStrikePrice​X×​HighStrikePrice−LowStrikePrice​​SettlePrice−LowStrikePrice​​,LowStrikePriceSettlePriceHighStrikePrice​0,SettlePrice≤LowStrikePrice​​ Payoffuser=X−PayoffmakerPayoff {user}=X - Payoff {maker}Payoffuser=X−Payoffmaker "},"technical-design/early-settlement.html":{"url":"technical-design/early-settlement.html","title":"Early Settlement Considerations","keywords":"","body":"Early Settlement Considerations Given the wide spectrum of payoff profiles behind structured products, there might be occasional scenarios where a certain product matures (terminates) before the final settlement date. A typical example would be with the Rangebound product, where the underlying price breaches either of the barriers, leading to the product being \"knocked-out\" and leading to an early termination of the transaction. However, in our product design, since all of the deposited capital has been re-staked to Aave to generate income, the dApp's stated payoffs & base returns are estimated assuming a 'full' maturity term. As such, should a trade be 'knocked-out', the user will be offered a decision with regards to their deposited capital. The default option is to leave it in the vault until the 'stated' maturity date, then collect the full deposit plus base returns (staking) as originally agreed ('Blue' outcome in diagram above). However, in the interest of full transparency and giving full control to the user, the SOFA dAPP will allow for an 'early withdrawal' option should a transaction be 'knocked-out' before maturity. However, in doing so, the user will collect less Base+ returns than originally envisioned, and the final return amount could even be less than the original principal in very rare circumstances ('Red' outcome above). Such exceptional cases could occur if a trade were to be knocked-out very early (e.g Day 1) in its term, and/or if Aave yields were too low to cover for the option premium spent. 📌 Nevertheless, please remember that early withdrawal is a choice, not an obligation. Users can always choose to leave the capital in the vault until the original maturity, at which point he / she will receive the principal back along with the full Aave interest. "},"technical-design/fees.html":{"url":"technical-design/fees.html","title":"Protocol Fees","keywords":"","body":"Protocol Fees 💰 SOFA will collect 15% of the user's option premium as a base trading fee. Furthermore, in the event of a 'winning' payout occurring for the user, a further 15% settlement fee will be charged against the total Gross Upside Payout. At SOFA, we are committed to creating a fair and transparent financial ecosystem where users can democratically purchase in a wide gamut of structured products with transparent and fair pricing from market makers. Furthermore, as a fully decentralized project, we want to ensure that any protocol gains are primarily shared with our underlying users, ensuring full incentive alignment rather than privileged payouts to special interest groups. As such, we have devised a series of fee structures with 'fair-launch' tokenomics to ensure proper value-accrual and support long-term platform longevity. There will be no VC joy-riding or exit-liquidity dumps within SOFA. Protocol Revenue Example: User purchases 10,000 USDT worth of Structured Products, maturing in 14 days at a price of 100 Product pays out [Principal + 2% interest] as a worst case downside scenario AAVE APY = 10% Excess Interest = [10% - 2%] = 8% APY User Option Premium = 10,000 8% (14/365) days = 30.68 USDT Market Maker Premium = 100 USDT Base Trading Fee = 30.68USDT * 15% = 4.602USDT Gross Upside Payout = (30.68 USDT + 100 USDT) Upside Settlement Fee = (30.68USDT + 100USDT) * 5% = 6.534 USDT (only in the event of a winning payout) Total Protocol Revenue = 4.602USDT + 6.534 USDT = 11.136 USDT Native Token ($RCH) Buyback Aligning protocol success with Token performance At SOFA, we believe that the most straight-forward way to align user and hodler incentives are through token buybacks, with $RCH being our native utility token. We will commit all protocol income to be exclusively used for $RCH buybacks**, creating a virtuous loop of token price gains being driven off protocol usage. With a fixed deflationary supply, methodical release schedule, and usage-driven airdops, the long-term value accretion for $RCH is largely a function of protocol revenue, which in itself is a direct measure of adoption success. Furthermore, with Token airdrops exclusively limited to protocol users and supporters, we can ensure that they stand best to benefit from SOFA's long-term success, staying true to DeFi's commerical ideals of 'giving back' to true core users and early adopters. The token buyback logic is an integral part of the SOFA protocol smart contract. Protocol administrators will regularly trigger this process to purchase and burn $RCH with protocol revenue through supported DEX venues. Destroyed $RCH will be no longer enter circulation, and the total amount of $RCH will gradually decrease over time on rising protocol usage. More details of our Tokenomics model will be covered in its own dedicated section below. "},"security/":{"url":"security/","title":"Security","keywords":"","body":"Security Security is the cornerstone and bedrock behind any decentralized platform. We define protocol security as encompassing asset safety, personal information protection, and smart contract reliability. In response to these considerations, we have implemented a series of stringent security measures, from contract design to protocol monitoring. Simple is More Secure SOFA's smart contracts, which carry the platform's core functionalities, follow the principle of \"simple is more secure\". This principle seeks to avoid unnecessary complexity to reduce potential security risks. The interaction between smart contracts is meticulously designed to ensure a streamlined and clear logical process, thereby minimizing the possibility of errors and vulnerabilities. Furthermore, all of the protocol's smart contracts are open source and transparent, providing a full auditable trial to any 3rd party observer. Upgrade Mechanism All Vault contracts will inherit OpenZepplin's Upgradeable contracts. Upon governance vote approval, contracts can be logically upgraded without changing the contract wallet address to ensure asset safety. This mechanism allows vulnerability fixes and function optimization with minimal disruption. Multiple Chain-Audits SOFA will seek professional chain-audit confirmations from the industry's top security firms to identify and fix potential security flaws. By the project launch, SOFA's contract code would have undergone several rounds of stringent inspections to meet the highest standard of security audits available. Furthermore, the same rigorous audit process will be repeated upon any significant protocol or functionality upgrades. 24/7 Monitoring for Anomalous Activity To continuously ensure asset safety, SOFA has implemented a 24/7 anomalous activity monitoring system for the entire protocol. This system can detect and respond to unusual transaction patterns or behaviors in real-time, such as potential security attacks or abnormal fund flows. Upon detecting threats, our monitoring system can quickly trigger alerts and take necessary steps to prevent protocol damage. Decentralized Attack Resistance As a native DeFi protocol, SOFA operates over a decentralized server network, meaning there is minimal risk of system downtime due to a single point of failure. With blockchain's distributed architecture, data is replicated and stored across various nodes, enhancing the system's resilience and resistance to cyber attacks. Decentralized server solutions offer the following advantages over conventional data servers: Enhanced Stability: By dispersing service nodes worldwide, we can ensure high reliability for our websites and dApp services, providing undisrupted services to protocol users. Improved Availability: Decentralized structure ensures that there are no central nodes that could become bottlenecks or single points of failure. Attack Resistance: Malefactors would need to compromise multiple nodes simultaneously to impact the service, significantly lowering the chance of success and bolstering protocol safety. Protecting User Privacy In addition to upholding our decentralisation principles, SOFA is a big proponent of user privacy and data protection. The protocol does not collect or store any personal information that can be used to identify users outside of their wallet addresses. With judicious contract design, professional audit validation, around-the-clock monitoring, and decentralized operations, SOFA is dedicated to providing a safe, reliable, and privacy-protecting environment for all DeFi users. "},"security/bug-bounty.html":{"url":"security/bug-bounty.html","title":"Bug Bounty Program","keywords":"","body":"Bug Bounty Program SOFA.org places great emphasis on user security and platform robustness. We recognize that security risks and vulnerabilities will always exist no matter how 'secure' the system appears to be. As such, to encourage community members to jointly contribute to our security efforts, we have launched a Bug Bounty program. This program is designed to reward white-hat hackers who spot and report potential security risks within our ecosystem. Joining Our Bug Bounty Program To participate in the Bug Bounty program with SOFA.org, please see the following steps: Familiarize Yourself with Bounty Details: Visit our project page on our Bug Bounty program page and thoroughly read the severity classifications, reward guidelines, and reporting requirements we have provided. We recommend that you read carefully to ensure you understand which types of vulnerabilities are eligible for rewards. Conduct Security Testing: Start testing the SOFA protocol's smart contracts, dApp interfaces, or any related infrastructure based on your area of expertise. Please adhere to responsible disclosure principles and avoid any testing behavior that could lead to actual asset losses. Submit a Report: If you believe you have found a valid security issue, please submit a detailed vulnerability report through Bug Bounty Program. Y our report should include a complete description of the issue, including steps to reproduce the vulnerability, its potential impact, and (if possible) a suggestion for mitigating or fixing the vulnerability. Wait for a Security Review: Our security team will review your report and work with you to verify the vulnerability. Please keep communication channels open so we can resolve the issue quickly and efficiently. Receive Your Reward: Once the severity of the vulnerability has been verified and corrective measures have been implemented, eligible reports will receive rewards. The reward amount will be assessed based on the severity and potential impact of the vulnerability. Reward Criteria The amount of the reward is based on the severity of the vulnerability, typically categorized into several levels ranging from Critical to Low. Specific reward amounts and criteria can be found on our page. Important Reminders Do Not Disclose Issues Publicly: Please do not publicly disclose any details before the issue is fixed to avoid potential malicious exploitation. Please Adhere to All Relevant Rules: When participating in testing, please adhere to all applicable laws and rules. We hope that through this Bug Bounty program, we can work together with the community to effectively bolster the security and integrity of the SOFA.org ecosystem. We look forward to interacting with security researchers and community experts to help discover and fix potential vulnerabilities, leading to a stronger, safer, and more reliable DeFi ecosystem for everyone to enjoy. "},"security/governance.html":{"url":"security/governance.html","title":"Governance Framework","keywords":"","body":"Governance Framework SOFA.org recognizes the value of decentralized governance within the DeFi ecosystem, and our governance framework empowers our Governance Token holders ($SOFA) with certain decision-making power to steer the protocol's direction. Furthermore, through the prudent use of multisig wallets, timelock contracts, and reputable voting platforms (Snapshot.org), we strive to ensure that our governance process is transparent, secure, and inclusive. Core Mechanisms Multisig Wallets: Multiple approvals are required from designated community members or stakeholders before transaction executions can occur. This ensures that decisions are made collectively rather than by a single entity, thereby bolstering governance robustness. Timelock Contracts: Timelock contracts add a delay between the initiation of a proposal and its execution. This delay provides a window during which the community can review and react to proposed changes, adding another layer of security and governance transparency. Snapshot.org: Snapshot is a decentralized voting platform that allows governance token holders to vote on proposals without incurring gas fees. It facilitates community engagement and decision-making by providing a user-friendly interface to carry out governance proposals. $SOFA Token: The $SOFA token is at the core of the SOFA governance system. This governance token serves as a right for community members to participate in the voting and decision-making processes of proposed initiatives. The combination of these tools serves to ensure that SOFA's governance model is operated under a democratic and community consensus. The overriding governance guidelines will be to promote the long-term success and interest alignment of protocol users and stakeholders through token ownership. "},"security/external.html":{"url":"security/external.html","title":"External Contingencies & Risk Factors","keywords":"","body":"External Contingencies & Risk Factors As much as we have endeavoured to design the SOFA protocols to be 'risk-free', we are cognizant that unforeseen \"force majeure\" type of risks are always a distant possibility. Furthermore, every design decision naturally comes with some form of compromise as a trade-off, and we have tried our best to list out some expected and 'edge case' risk factors here below. Unfavourable Payoff Outcomes & Variability For Surge-based products, if the actual asset price movement moves unfavourably against the terms of product (e.g. outside the barriers), there is a risk of losing the entire principal. For Earn-based products, the exact interest payout of the structure is dependent on the underlying asset's price movement and value at expiry date. Early Withdrawal Considerations For specific products with an early termination feature (i.e. if the price touches or exceeds either barrier, aka. Knock-out), such as with the Rangebound product, there is a chance that the transaction will 'early-terminate' before the stated maturity date. Should the user decide to withdraw their deposited capital early from the vault, and we reiterate - it's an option, not an obligation - there's a chance for the returned capital to be less than the expected base return, and in some rare cases even below the original deposited amount. The derived payout is wholly determined by when the transaction is 'knocked-out' versus the maturity length, as well as what the prevailing interest rate is at Aave for the purpose of the interest calculation. DeFi Extensibility Risks with External Protocols SOFA.org adopts a very conservative and measured approach with using reputable, secure, and battle-tested protocols such as Aave for our staking activities; however, external 3rd party risks and exploits could always happen with these established protocols beyond our control. The network of partner protocols will likely grow along with the SOFA ecosystem and DeFi industry in general. Staking Yield Deficit For most of the Earn-based products, the 'Base Yield' return and the embedded option premium is directly funded by the staking-income earned from Aave. While the SOFA protocols will only use a _portion _of the expected income to fund the option premium as buffer, the product could still suffer from an income deficit should Aave yields collapse to say 0% as an unimaginable, 'black-swan' type of event. In that case, the deposit returned to the user could be very slightly less than what they put in, with the difference being attributable to the Aave yield short-fall. Blockchain Systemic Risks The initial SOFA protocol will be initially deployed on Etherum and EVM compatible blockchains, and is naturally reliant on their Proof-of-Staking frameworks An unfamothable compromise in blockchain security or other hacks would jeopardize the integrity of all DeFi protocols, including SOFA. Smart Contract Code Integrity SOFA.org has engaged and will be engaging with the most reputable and professional security firms in the industry to audit our contracts. We view auditing as an ongoing process and will continue to invite more auditors as the protocol evolves. The initial SOFA protocols have passed a full chain audit. Peckshield Code4rena SigmaPrime will be published soon. "},"tokenomics/":{"url":"tokenomics/","title":"Tokenomics","keywords":"","body":"Tokenomics SOFA.org has meticulously designed a dual-token model to operate ecosystem tokenomics. The protocol's native utility token is called $RCH, while the governance token is appropriately named $SOFA. Let’s explore the vibrant ecosystem of SOFA.org, powered by $RCH and $SOFA tokens. 🤝 Meet $RCH: The Utility Token $RCH is SOFA’s main token, and you can’t just buy it early or get it from the developers. To earn $RCH, you have to use SOFA.org’s services or join later referral programs. This ensures that only active users benefit, avoiding quick, harmful sell-offs seen in other projects. Each day, users who transact on SOFA.org get $RCH based on their activity. Not even the project developers have any ownership of $RCH on day 1 - how fair is THAT? This fair launch method ensures long-term success and benefits for the true users of the platform. Total Supply: Capped at 37,000,000 $RCH. Pre-Minted Supply: 67% (25 million) locked in a Uniswap liquidity pool with ETH. Airdrop Supply: 33% released to users on a set schedule. Revenue Usage: All SOFA protocol revenue buys and burns $RCH from Uniswap. Deflationary Mechanism: Increased transactions lead to more $RCH burns, reducing supply and increasing value. Long-Term Value: $RCH price rises with protocol usage, benefiting active users and holders. At project launch, 67% of $RCH (25 million tokens) is pre-minted and placed into Uniswap's V3 pool on Ethereum along with ~725 ETH (~$2.7M) as the initial liquidity pool Please note, this initial liquidity is not owned by anyone. After depositing into the LP, the corresponding Uniswap LP tokens are promptly destroyed, ensuring that the token’s initial liquidity pool can never be withdrawn. This ensures that the $RCH float available will eventually be far less than what was originally locked into the LP, thereby setting an effective floor on the value of $RCH at its initial price. 🪂 Did Someone Say Airdrops?!?! Furthermore, the remaining 33% (12 million tokens) of $RCH will be airdropped to ecosystem users according to a predetermined release schedule. Initially, 12,500 of $RCH tokens will be airdropped daily over the first 180 days. After which, the airdropped amounts will decrease by an incremental 20% every 180 days ad infinitum. Days after Launch Daily Airdrop 0 12,500 180 10,000 360 8,000 540 6,400 720 5,120 900 4,096 1080 3,276.8 📝Other $RCH Notes Positive Reflexivity: More transactions increase $RCH price, making airdrops more valuable and encouraging more transactions. Self-Correcting Mechanism: If $RCH price drops, more tokens get burned, stabilizing the price until transactions pick up again. No Exit Dumps: $RCH's fair launch prevents sudden large sell-offs since no one gets $RCH at launch. Future Growth: New DeFi projects can join the SOFA.org ecosystem as partners. Acquiring $RCH Tokens & Airdrop Math The best way to obtain $RCH is to transact and execute transactions with the SOFA ecosystem. A set amount of $RCH will be airdropped daily to our protocol users, with received rewards to be split pro-rata based on the user's transaction volumes on the day. 💰 RCH = User Executed Premium (on the day) / Total Premium Handled by SOFA (on the day) [Vault Weight] 95% (dApp Access) Option Premium Approximation For Earn based products, given that the option premium will be funded by the deposit interest savings from Aave, only a small portion of the user's deposit total will be considered \"premium' for airdrop calculations. On the contrary, the entire **purchase amount from Surge products** will be eligible for consideration, as it will be fully deployed to underlying option strategies. An approximate premium estimate is as follows: Protocol Premium (Approximation) Comment Earn (Aave’s Savings Rate – Product Base Yield) Maturity (in Days) / 365 Deposit Value SOFA uses only a portion of Aave’s interest income to risk as option premium to maintain a minimum base return Surge The Entire Purchased Amount The entire purchase is spent as an option premium to speculate on high upsides. Moreover, as an attempt to incentivize activities across both protocols, we have included a [Vault Weight] at the end of the formula, currently set to [50] for Earn, and [1] for Surge at our initial launch. Finally, a final [95%] adjustment factor is applied to account for the airdrop haircut paid to the dApp broker. As SOFA grows and additional protocols come in, you can appreciate how important this variable will be in driving TVL, and this is going to be one of the vital parameters that can be voted on by our $SOFA governance token holders. 🤝 Meet $SOFA: The Governance Token The $SOFA token is the governance token of the SOFA.org ecosystem. As a decentralized, non-profit, open-source technology organization, all decisions within the SOFA.org ecosystem are determined by votes from $SOFA token holders. As a pure governance token, $SOFA does not participate in any profit sharing within the ecosystem. 🎤 The Voice of the Community Subject Matters Pertaining to Governance Votes: Types of financial products to be onboarded Determination of the eligible basket of supported collateral (USDT etc.) Admission of new partner protocols into the SOFA.org ecosystem Distribution mix % of daily $RCH airdrops between the various on-boarded products Distribution mix % of daily $RCH airdrops amongst ecosystem protocols Pace of $RCH airdrops And other decisions to come as the ecosystem matures Acquiring $SOFA Tokens ▶️ Early Association Members and Developers: SOFA.org is well-attended and supported by some of the most influential Web3 institutions and builders, who will be providing the initial as well as on-going infrastructure support of the ecosystem. ▶️ Ecosystem Advisors: Web3 industry and thought leaders who are sharing their wisdom for the continued betterment of the project. ▶️ Active Community Members: Users and members who are actively participating in our public community activities during the initial stages of the project. ▶️ Early Position Token Recognition: For both CeFi and DeFi partners who are able to early-adopt and recognize our Position Tokens as eligible collateral on their platforms. ▶️ Early AMM Liquidity Contributors: Project supporters who graciously contributed non-withdrawable ETH liquidity to the initial Uniswap LP for the $RCH pool. "},"tokenomics/rch-scenario.html":{"url":"tokenomics/rch-scenario.html","title":"Hypothetical $RCH Float Scenario (LP + Cumulative Airdrops)","keywords":"","body":"Hypothetical $RCH Float Scenario (LP + Cumulative Airdrops) Base assumptions 0.02% protocol service fee, 1,000,000 USDT in day 1 protocol TVL with 2% daily growth, 12.5k in daily notional $RCH airdrops with 50% sold back into LP pool Positive Reflexivity with Self-Correcting Downside Adjustments Given its deflationary supply model, increased protocol transactions should lead to a higher $RCH price. As the utility token's price increases, so does the value of the upcoming airdrops, which encourages additional transactions and creates a positive feedback loop for the entire ecosystem. On the other hand, should the token price fall precipitously for whatever reason, the USDT based protocol transaction fees will be able to burn a greater quantity of $RCH tokens from the daily buyback operations. This serves as a powerful, self-correcting adjustment to stabilize the token price, until the daily transactions can catch-up to resume a net supply deficit and restart the upward $RCH price trajectory. No Exit-Liquidity Dumps Learning from the experience of prior projects, $RCH's fair launch mechanism will eliminate any negative 'cliff vesting' impacts or insider liquidity dumps as no party is entitled to any $RCH at launch. Furthermore, the utility token's initial liquidity is locked and cannot be withdrawn by its contributors, ensuring a minimum level of liquidity regardless of market developments. Finally, as long as protocol transactions continue to happen, this should be a net deflationary supply impact on $RCH, granting the token price a very strong tailwind for the long-haul. Infinitely Scalable Ecosystem In the future, any aspiring DeFi project that meets the standards of SOFA.org can apply to join the ecosystem as a protocol partner. Benefits of Joining the Ecosystem Recommendation by SOFA.org as a DeFi project that observes and upholds the association's decentralized values and design, serving as an expedited pathway to connect with rest of the SOFA ecosystem. Transactions within the greater SOFA ecosystem also qualify for the daily $RCH airdrops. Prerequisites for Joining the Ecosystem Adherence to True DeFi Standards: Projects must meet the true DeFi standards set forth by SOFA.org, supporting the continued growth of the decentralisation mission. Allocation of Fees to Burn the Native Token: Projects should allocate all or a portion of their transaction fees to burn the $RCH token, contributing to the deflationary mechanism and accelerating the value creep to our loyal users. Approval through Collective Voting by $SOFA Holders: Projects must be approved to join the ecosystem through a collective voting process by $SOFA token holders as a form of community endorsement. As more protocols join the SOFA.org ecosystem, more transaction fees will be allocated towards token buybacks, creating profound gains for our token holders. At the same time, we would also have succeeded in breaking new grounds on how digital assets can be settled on-chain, while offering a robust tri-party solution for mitigating counterparty risks across both DeFi and CeFi platforms. "},"developer/":{"url":"developer/","title":"Developer Documentation","keywords":"","body":"Developer Documentation The SOFA protocol is a completely open, inclusive, and non-profit blockchain project, and we welcome any and all talented individuals to contribute to the on-going development of the SOFA ecosystem. With the exception of the protocol's core on-chain settlement and custody functions, all other aspects of the protocol are open to modifications and advancements by anyone else. Such aspects include the front-end interface, matching services, or also being a participating market maker through our dAPP platform. Value-add contributors are eligible for $RCH airdrop rewards as covered in the Tokenomics section. Please refer to the following developer documentations for various technical specifics on how to get connected with our protocol. We look forward to seeing a thriving SOFA community in the foreseeable future ahead. "},"developer/marketmaker-open-apis.html":{"url":"developer/marketmaker-open-apis.html","title":"Market Maker Open APIs","keywords":"","body":"Open APIs for Market Maker Specification Prefix To ensure transaction security, use HTTPS for transmission. JSON is the data interchange format. UTF-8 character encoding is universally applied. Interface signing algorithm utilizes HMAC-SHA256. UNIX millisecond timestamp is used, representing the number of milliseconds since January 1, 1970, 0:00:00. Parameters Request name type remark H-Request-Id string [Header]Request ID, unique H-Api-Key string [Header]API Key H-Timestamp long [Header]Valid timestamp，e.g., 1672387200000 H-Nonce string [Header]Random string Authorization string [Header]Signature，e.g.,：rfq-hmac-sha256 signature Rsponse name type ramark code integer [Body]Error code message string [Body]Error reason value T [Body]Result Signature Generation Our RFQ platform requires partner signatures to approve requests, followed by a verification procedure. A verification failure will lead to a platform rejection with a 401 Unauthorized response. Building the signature string: The signature string consists of five lines, each representing a parameter. Each line ends with a semicolon, including the last line. The valid timestamp and the request nonce are taken from the H-Timestamp and H-Nonce parameters in the header, respectively. Timestamp;NonceStr;HTTP_METHOD();URI();RequestBody; Populating the signature Use the SecretKey to encrypt StringToSign using HMAC-SHA256. StringToSign = Timestamp + \";\" + NonceStr + \";\" + UPPERCASE(HTTP_METHOD()) + \";\" + URI() + \";\" + RequestBody + \";\"; Signature = BASE64_STRING( HMAC-SHA256( BASE64_DECODE(SecretKey), StringToSign ) ); Setting HTTP Headers The request transmits the signature through the HTTP Authorization header. The Authorization header comprises of two parts: authentication type and signature information. Authorization: AuthenticationType SignatureInformation 1. Authentication Type: rfq `-hmac-sha256` 2. Signature Information: `Signature` Authorization: rfq-hmac-sha256 Signature Note: The request method should be in UPPERCASE. The RequestBody used for the signature must match the content of the request's body. For GET and DELETE requests, the URI should include the request parameters (e.g., /api/v1/result?orderId=123). If there is no request body (common for GET requests), the request body should be an empty string (\"\"). The valid timestamp (H-Timestamp) is determined by the requester; requests extending beyond the valid timestamp will be rejected by the RFQ server. RFQ Provide DNT RFQ Quote GET rfq/dnt/quote Parameters name required type description vault true string Vault address chainId true int Chain ID expiry true long Expiry time in seconds timestamp，e.g., 1672387200 lowerBarrier true number Lower barrier upperBarrier true number Upper barrier depositAmount true number Deposit premiumAmount true number Premium protectedFundingAmount false number Protected interest（null when RISKY） deadline true long Quote deadline，e.g., 1672387200 takerWallet false string Taker wallet address anchorPricesDecimal true long makerCollateralDecimal true long collateralAtRiskPercentageDecimal true long totalCollateralDecimal true long underlyingPair true string Underlying Pair, e.g. BTC-USDT trackingSource true string Data sources are used to track the underlying value, e.g. DERIBIT depositCoin true string Currency / Coin of the premium paid to subscribe DNT riskType true string Type：PROTECTED, RISKY Response name type description timestamp long Quote timestamp vault string chainId int expiry long Expiry timestamp，e.g., 1672387200 anchorPrices list[string] 20000000000,30000000000 makerCollateral string totalCollateral string collateralAtRiskPercentage string E18 deadline long Quote deadline timestamp makerWallet string signature string Note: totalCollateral * collateralAtRiskPercentage - makerCollateral == premiumAmount totalCollateral - makerCollateral == depositAmount Examples Request URL rfq/dnt/quote Parameters { **\"rfqId\"**:**1233992,** **\"apy\"**:**0.25,** **\"tenor\"**:**7.9,** **\"fundingAmount\"**:**0.01,** **\"depositAmount\"**:**1,** **\"premiumCoin\"**:**\"BTC\"**, **\"premiumAmount\":0.05,** **\"bookingQuantity\":1,** **\"totalAmount\":0.05,** **\"payoff\":1,** **\"deadline\":1672279892000,** **\"signature\":\"dsdkksdsksdk\"** } Appendix Code Message 1000 system error. 2001 sign error. 2002 param error. 3001 Requested information does not exist. 3002 Deposit amount is outside depositRange. 3003 Maximum subscriptions limit is reached. 3004 Subscription failed due to too much difference in premiumAmount. 3005 Quote failed. 3006 Temporarily do not provide service. 3007 Api rate limit exceeded. Try slow down. 3100 Order creation failed. Required Functions： premiumAmount = totalCollateral * dntCollateralRatio - makerCollateral depositAmount = totalCollater - makerCollateral bookingQuantity = totalCollateral * dntCollateralRatio projectedFundingAmount = projectedFundingAPY * (expDateTime - refDateTime) / 365 Tenor = (expDateTime - refDateTime) / 365 APY-In-Range = (projectedFundingAmount - premiumAmount + bookingQuantity) / tenor = makerCollateral / tenor APY-Protected = (projectedFundingAmount - premiumAmount) / tenor "},"developer/dapp-open-apis.html":{"url":"developer/dapp-open-apis.html","title":"DAPP Open APIs","keywords":"","body":"Open APIs for DAPP Developer We offer a 'contract product pricing feature' for the protocol, which involves soliciting quotes from MarketMakers and then returning the best pricing results back to SOFA. Users will subsequently have a choice to execute or reject the trade. Given the need to interface with different MarketMakers depending on the underlying contract, products will distinguished by contract type. Recommended DNT RFQ Inquiry Description Supports a list of RFQs composed of the same vault+chainId. POST /rfq/dnt/recommended-quote Input parameters Field Name Required Type Description list array[object] vault true string Contract information chainId true int Chain ID expiry true long Second-level timestamp for the expiry date, e.g., 1672387200 lowerBarrier true number Lower price upperBarrier true number Upper price depositAmount true number RFQ purchase amount inputApyDefinition true string The underlying code is Enum indicating how the input APY is calculatedOptimusDefaultAPY, BinanceDntAPY, AaveLendingAPY protectedApy false number Guaranteed annual yield (empty for RISKY, required for protected) fundingApy false number AAVE annual yield (empty for RISKY, required for protected) Input Parameter Example { \"list\":[ { \"vault\":\"0x0E3a24ed24fBfF5406C8529fBe3Cc4DFE12b1cDB\", \"chainId\":80001, \"lowerBarrier\":2775, \"upperBarrier\":2825, \"expiry\":1708416000, \"depositAmount\":1000, \"protectedApy\":0.01, \"fundingApy\":\"0.1098\", \"inputApyDefinition\":\"AaveLendingAPY\" } ] } Output Parameters Field Name Type Description code int 0 indicates that the return result is normal message string Error message returned in case of an exception value list[object] Object Field Name Type Description vault string Contract address chainId int Chain ID riskType string Risk type: PROTECTED, RISKY forCcy string Underlying currency domCcy string Currency pair depositCcy string Subscription currency lowerBarrier number Lower price upperBarrier number Upper price depositAmount number RFQ purchase amount expiry long Expiry timestamp (e.g., 1672387200) protectedReturnAmount number Total amount of guaranteed return, in the same unit as depositCcy fundingAmount number Estimated yield for the period; zero for non-guaranteed types enhancedReturnAmount number Total amount of extra return when not knocked out, in the same unit as depositCcy timestamp long Current pricing's trigger time; the next observation start time is calculated based on this logic observationStart long Estimated start time of observation for knocking in/out based on timestamp quote object anchorPrices list[string] 20000000000, 30000000000 makerCollateral string Maker's collateral amount totalCollateral string Total collateral amount (Taker+Maker) collateralAtRiskPercentage string Required when guaranteed (can be empty) deadline long Expiration timestamp (e.g., 1672387200) makerWallet string Maker's wallet (can be empty) signature string Signature (can be empty) Output Parameters example { \"succ\":true, \"code\":0, \"message\":\"\", \"value\":[ { \"chainId\":80001, \"vault\":\"0x0E3a24ed24fBfF5406C8529fBe3Cc4DFE12b1cDB\", \"riskType\":\"PROTECTED\", \"forCcy\":\"WETH\", \"domCcy\":\"USDT\", \"depositCcy\":\"USDT\", \"lowerBarrier\":\"2775\", \"upperBarrier\":\"2825\", \"depositAmount\":\"1000\", \"expiry\":\"1708416000\", \"timestamp\":\"1708142778\", \"protectedReturnAmount\":\"0.08219178\", \"fundingAmount\":\"0.90246575\", \"enhancedReturnAmount\":\"3.69018697\", \"observationStart\":\"1708156800\", \"quote\":{ \"anchorPrices\":[ \"2775000000\", \"2825000000\" ], \"makerCollateral\":\"2869913\", \"totalCollateral\":\"1002869913\", \"collateralAtRiskPercentage\":\"3631\", \"deadline\":\"1708143378\", \"makerWallet\":\"0xDFD6f6a6c1AB0184a483F1c7f691f1ea6B810e55\", \"signature\":null } }, { \"chainId\":80001, \"vault\":\"0x0E3a24ed24fBfF5406C8529fBe3Cc4DFE12b1cDB\", \"riskType\":\"PROTECTED\", \"forCcy\":\"WETH\", \"domCcy\":\"USDT\", \"depositCcy\":\"USDT\", \"lowerBarrier\":\"2775\", \"upperBarrier\":\"2825\", \"depositAmount\":\"1000\", \"expiry\":\"1708761600\", \"timestamp\":\"1708142781\", \"protectedReturnAmount\":\"0.19178082\", \"fundingAmount\":\"2.10575342\", \"enhancedReturnAmount\":\"21.6891866\", \"observationStart\":\"1708156800\", \"quote\":{ \"anchorPrices\":[ \"2775000000\", \"2825000000\" ], \"makerCollateral\":\"19775214\", \"totalCollateral\":\"1019775214\", \"collateralAtRiskPercentage\":\"21123\", \"deadline\":\"1708143381\", \"makerWallet\":\"0xDFD6f6a6c1AB0184a483F1c7f691f1ea6B810e55\", \"signature\":null } } ] } Inquiry Notes: Please do not pass the user's wallet address on a pure inquiry request. A user's wallet address should be passed on only upon subscribing. GET /rfq/dnt/quote Input Parameters Field Name Required Type Description vault true string Contract information chainId true int Chain ID expiry true long Second-level timestamp for the expiry date, e.g., 1672387200 lowerBarrier true number Lower price upperBarrier true number Upper price depositAmount true number RFQ purchase amount inputApyDefinition true string The underlying code is Enum indicating how the input APY is calculatedOptimusDefaultAPY, BinanceDntAPY, AaveLendingAPY protectedApy false number Guaranteed annual yield (empty for RISKY, required for protected) fundingApy false number AAVE annual yield (empty for RISKY, required for protected) takerWallet false string Inquirer's wallet public address information Output Parameters Field Name Type Description code int 0 indicates that the return result is normal message string Error message returned in case of an exception value list[object] Object Field Name Type Description vault string Contract address chainId int Chain ID riskType string Risk type: PROTECTED, RISKY forCcy string Underlying currency domCcy string Currency pair depositCcy string Subscription currency lowerBarrier number Lower price upperBarrier number Upper price depositAmount number RFQ purchase amount expiry long Expiry timestamp (e.g., 1672387200) protectedReturnAmount number Total amount of guaranteed return, in the same unit as depositCcy fundingAmount number Estimated yield for the period; zero for non-guaranteed types enhancedReturnAmount number Total amount of extra return when not knocked out, in the same unit as depositCcy timestamp long Current pricing's trigger time; the next observation start time is calculated based on this logic observationStart long Estimated start time of observation for knocking in/out based on timestamp quote object anchorPrices list[string] 20000000000, 30000000000 makerCollateral string Maker's collateral amount totalCollateral string Total collateral amount (Taker+Maker) collateralAtRiskPercentage string Required when guaranteed (can be empty) deadline long Expiration timestamp (e.g., 1672387200) makerWallet string Maker's wallet (can be empty) signature string Signature (can be empty) "},"developer/subgraphs.html":{"url":"developer/subgraphs.html","title":"Subgraphs","keywords":"","body":"Subgraphs We support the development of efficient and responsive applications by providing real-time and accurate blockchain data access through the use of The Graph's indexing protocol. Subgraphs are a powerful tool that allows us to index data stored on Ethereum and query this data via GraphQL. Here is how you can utilize custom subgraphs to query related data within the protocol: Mainnet Arbitrum Accessing Our Subgraph We have created specific subgraphs for the protocol's data. These subgraphs contain various entities indexed from the blockchain, such as transactions, accounts, and specific events related to our DeFi products. You can query data in the subgraph via the following steps: Step 1: Find the Endpoint Locate the GraphQL endpoint URL corresponding to the subgraph you wish to interact with. This typically appears as a web address link. Please ensure you are using the most up-to-date endpoint. Step 2: Understand the Schema The schema describes the entities within the subgraph and the types of queries that can be performed. Understanding the schema is crucial for writing efficient queries. Step 3: Write a GraphQL Query Based on the schema, you can start writing GraphQL queries to query data from the subgraph. GraphQL allows for very specific queries, requesting only the fields you are interested in. For example, if you want to query detailed information for each transaction, you might write a query like this: { position(id: \"\") { anchorPrices collateralAtRiskPercentage createdAt expiry id isMaker makerCollateral owner payoff productId term timestamp totalCollateral vault } positions transaction(id: \"\") { anchorPrices collateralAtRiskPercentage expiry hash id maker makerCollateral minter referral term timestamp totalCollateral vault } transactions } This will return transactions and their related details for the first five records on the blockchain. Step 4: Send the Query Request Send your query request using any HTTP client that supports GraphQL. You can use a command-line tool such as curl, or a library integrated into your application, like apollo-client. Typically, the request is sent as a POST request to the endpoint URL. An example code using curl is as follows: curl -X POST -H \"Content-Type: application/json\" --data '{\"query\": \"{ transactions(first: 5) { id from to value blockNumber } }\"}' https://api.studio.thegraph.com/query/77961/sofa-mainnet/version/latest Replace the url with the actual subgraph name, and determine the URL based on the actual situation. Step 5: Analyze and Use the Response After your query request is sent, the GraphQL service will return the response in JSON format. You can process this data in your application or directly display it to users on the front end. Best Practices Use Query Variables: If you frequently need to perform queries of the same structure but with different parameters, using query variables can make it easier to reuse your queries. Handle Errors: In addition to normal responses, GraphQL can also return error information. Make sure your client code can gracefully handle these situations. By following the above steps, you can effectively use The Graph to query data on the SOFA protocol to support your development projects. Please refer to the rest of our developer documentation and Subgraph related resources for further information. "},"developer/contracts.html":{"url":"developer/contracts.html","title":"Deployment Contracts","keywords":"","body":"Contracts Mainnet Name Address RCH 0x57B96D4aF698605563A4653D882635da59Bf11AF FeeCollector 0x4140AB4AFc36B93270a9659BD8387660cC6509b5 DNTVault(ETH/USDT) 0x3a253838121b9ad9736fAFc030Cf4971615D68b2 DNTVault(WBTC/USDT) 0xD9cFF1bc89f705EaB2579fA2DC86E9a6F971370a AAVEDNTVault(ETH/USDT) 0x00aEca021D0f06c7dee54D58ee6Af47B5645aB19 AAVEDNTVault(WBTC/USDT) 0x989897f1D976EE0b59Bf0A3172C170D8f3Cb84e3 SmartBullVault(ETH/USDT) 0x106825b71ccE77a70B69f57A0ACf9C4a6acf292a SmartBullVault(WBTC/USDT) 0x5494855B98858Ea4eF54D13E1d003197A387CE34 SmartBearVault(ETH/USDT) 0x9C5D3C3AbD633b8eA68C5a51325f8630DC620AD9 SmartBearVault(WBTC/USDT) 0x2F1C60bA96ec6925fA9bBbFC9Eb7908bD35Bc224 AAVESmartBullVault(ETH/USDT) 0x9377f17ABde96887943e5Fcc92Db034c76820529 AAVESmartBullVault(WBTC/USDT) 0x99c59D82b10c56950F6C031946656e6D0aD509ca AAVESmartBearVault(ETH/USDT) 0xF6c70b5F034070001E833C9EbC6a3A0176B683A6 AAVESmartBearVault(WBTC/USDT) 0x62104e40fA81a19f2B7E17C78C3ffBF4aCa4F212 Arbitrum Name Address FeeCollector 0x4Bd6bE959897631fbE5a8Aae01707219850e032f DNTVault(ETH/USDT) 0x7ECd1b5255543F4C2D7D8E475afCd01699dBE2B0 DNTVault(WBTC/USDT) 0xdFEb3460771148799b2D4344c369e2b2d6C26c42 AAVEDNTVault(ETH/USDT) 0x3a253838121b9ad9736fAFc030Cf4971615D68b2 AAVEDNTVault(WBTC/USDT) 0xD9cFF1bc89f705EaB2579fA2DC86E9a6F971370a SmartBullVault(ETH/USDT) 0x00aEca021D0f06c7dee54D58ee6Af47B5645aB19 SmartBullVault(WBTC/USDT) 0x989897f1D976EE0b59Bf0A3172C170D8f3Cb84e3 SmartBearVault(ETH/USDT) 0x6E72C8726c71a4Cbc6e31ff7d47B399Fa983C7B8 SmartBearVault(WBTC/USDT) 0x106825b71ccE77a70B69f57A0ACf9C4a6acf292a AAVESmartBullVault(ETH/USDT) 0x9C5D3C3AbD633b8eA68C5a51325f8630DC620AD9 AAVESmartBullVault(WBTC/USDT) 0x2F1C60bA96ec6925fA9bBbFC9Eb7908bD35Bc224 AAVESmartBearVault(ETH/USDT) 0x72e0906558e4Ee528974cD7803bfF12d9f2869C3 AAVESmartBearVault(WBTC/USDT) 0x9377f17ABde96887943e5Fcc92Db034c76820529 "}}